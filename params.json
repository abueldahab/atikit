{"name":"Atikit","tagline":"Ticketing and Project Management system utilizing @stripe for credit card processing, @dwolla for bank transfers, and @vitelity for SMS Notifications. Create quotes, bill clients and set up recurring payments easily!","body":"aTikit v1.0\r\n===========\r\n<a href=\"http://www.core3networks.com\">\r\n  <img src=\"http://my.secrds.com/containers/04239a258eef046714f996913b6956ca/site/images/c3.gif\">\r\n</a>\r\n\r\nInstallation Video http://www.youtube.com/watch_popup?v=VVJ8gR1_EC4&vq=hd1080\r\n\r\naTikit is a ticketing system that includes billing for some of the newest \r\nmerchant providers out there; namely [Stripe] and [Dwolla]. When looking\r\nfor a system to help manage my web development projects I realized there\r\nwasn't anything out there that was simple to use, didn't cost much, and\r\ndid everything I needed. I developed aTikit (from the phrase: \"Did you\r\nput it in 'a ticket'?\") to handle all my internal tasks, and be able\r\nto bill clients based on a statement of work. aTikit Comes with the \r\nfollowing functions: \r\n\r\nFeature List\r\n-------------------\r\n1. Administrative Inteface to create multiple Queues (i.e. billing, sales,\r\ntechnical support. *Supports Unlimited Queues*\r\n2. Manage Stripe.com Plans, Coupons and Track Payout Schedules\r\n3. Integrate Dwolla support so your customers can pay with Checking and\r\navoid credit card fees.\r\n4. Unlimited Access Levels with *hide billing* support for agents who\r\ncannot see billing information.\r\n5. SMS Capabilities with [Vitelity]. Send SMS messages to key agents when\r\na company is set to VIP status. Notifications when tickets are created and\r\nupdated.\r\n6. Create Statements of Work (i.e Quotes). Quotes are sent to the customer's \r\ne-mail address and can accept via an accept link to signify that they\r\napprove the quote and you can begin work.\r\n7. Ticket Tasks with each ticket. In order to keep tickets from getting \r\nincredibly long, ticket tasks (or subtickets) are created and are only\r\nviewable by the providing company agents. Each task can be assigned\r\nto different agents and notations are provided for each.\r\n8. Customer notations can be made under the history tab only viewable by the \r\nproviding company.\r\n \r\n \r\nFuture Plans\r\n---------------------------\r\n1. Create Partnerships - With the aTikit API you will be able to establish\r\na partnership with another company and share tickets when applicable. For \r\ninstance, if you are a designer, and you have a web developer that you work\r\nwith on a consistent basis, you can add them as a partner. Once added,\r\nthe other company can be added to tickets on a as-needed per-ticket basis.\r\n\r\nIntegrated Services\r\n---------------------------\r\n*stripe.com* is used for Credit Card Processing. We did not go with any other\r\nproviders like authorize.net because you have to keep cards on file. Stripe\r\nis a newer company, and we wanted to go with newer technology than archaic\r\nbilling processors. \r\n*dwolla.com* is used for bank to bank transfers. Dwolla.com is being used \r\nall over the place and only charges $0.25 per transaction. Which is insane,\r\nso we integrated their API. \r\n*vitelity.net* - Vitelity is a VOIP/SMS/vFAX provider. They were the best\r\nand easiest choice to go with when dealing with sending SMS.\r\n\r\nRequirements\r\n----------------------------\r\n1. PHP 5.4.x - You must have PHP 5.4 installed for aTikit to function. I did\r\nthis on purpose. I'm tired of seeing old PHP installations out there; upgrade your stuff.\r\n2. Apache with mod_rewrite - I use .htaccess for my url dispatchers in this code. It started\r\noff as a bad habit, and ended as a bad habit.\r\n3. MySQL and Memcache - Both are required. Install MySQL 5.5. It's not required but\r\nyou should be using it anyway.\r\n4. Postfix - If you are using exim, you have no idea what you are doing and need to probably\r\nhost this with someone else. Otherwise apt-get install postfix.\r\n5. Debian - If you use centos, I pity the fool. \r\n\r\nHow to Install aTikit\r\n--------------------\r\n1. Checkout the Repo\r\n```git clone https://github.com/core3net/atikit.git```\r\n2. Create Database and import shell.sql\r\n3. Modify classes/config.inc.php and change the db configs and namespace prefix (and memcache)\r\n4. Login to the URL you have set up and create an account. The first account you create is \r\nconsidered the admin account and providing company.\r\n5. Update logo.png with your Company Logo. This is used for quotes that you send\r\n to clients. You can specify a different filename in the settings for quotes if needed.\r\n6. Click *ATIKIT ADMIN* at the top of the page. Update the settings in the following order:\r\n * Access Levels - Create your access levels that you will be using. At least add Administrator \r\n * aTikit Users - Edit your admin user, and set your new access level.\r\n * Queues - Create your queues. The email addresses you use for your queues must support IMAP with\r\n SSL/TLS\r\n * General Settings - Update your Stripe Keys, General Settings, Dwolla Keys and Vitelity Keys if\r\n you are going to be using SMS. \r\n7. Add a cronjob that runs every minute to poll your queues for new emails. As an Example \r\n```*/1 * * * * cd /web/sites/atikit/dev.tikit.co; /usr/bin/php poll.php > /dev/null 2>&1```\r\n\r\nDisclaimer\r\n-------------------\r\nThis is my first project that I am releasing to the public. My code uses libraries that I have\r\ndeveloped over the years that help me do menial tasks. If you see some functions in my tools\r\nfile that you cannot understand why they are there, they probably aren't for this project. \r\n\r\nAuthors\r\n-------------------\r\nChris Horne http://www.facebook.com/superawesome - chorne@core3networks.com\r\n\r\n[stripe]: http://www.stripe.com\r\n[dwolla]: http://www.dwolla.com\r\n[vitelity]: http://www.vitelity.net\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}